{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Divya\\\\Desktop\\\\graphql\\\\client\\\\src\\\\components\\\\AddBook.js\",\n    _s = $RefreshSig$();\n\nimport { gql, useQuery } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getAuthorsQuery = gql`\n    {\n        authors {\n            name \n            id\n        }\n    }\n`;\n\nfunction AddBook() {\n  _s();\n\n  const {\n    error,\n    loading,\n    data\n  } = useQuery(getAuthorsQuery);\n\n  const getAuthors = (error, loading, data) => {\n    if (loading) return /*#__PURE__*/_jsxDEV(\"option\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 29\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"option\", {\n      children: \"Something wrong happened\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 27\n    }, this);\n    return data.authors.map(author => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        children: author.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"add-book\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Book name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Genre:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        children: getAuthors(error, loading, data)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddBook, \"HI03G041Ap3pl86T5zxbgkmHLak=\", false, function () {\n  return [useQuery];\n});\n\n_c = AddBook;\nexport default AddBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBook\");","map":{"version":3,"sources":["C:/Users/Divya/Desktop/graphql/client/src/components/AddBook.js"],"names":["gql","useQuery","getAuthorsQuery","AddBook","error","loading","data","getAuthors","authors","map","author","name"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;;AAEA,MAAMC,eAAe,GAAGF,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;;AAUA,SAASG,OAAT,GAAmB;AAAA;;AACf,QAAM;AAACC,IAAAA,KAAD;AAAOC,IAAAA,OAAP;AAAeC,IAAAA;AAAf,MAAuBL,QAAQ,CAACC,eAAD,CAArC;;AACA,QAAMK,UAAU,GAAG,CAACH,KAAD,EAAOC,OAAP,EAAeC,IAAf,KAAwB;AACvC,QAAID,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACb,QAAID,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACX,WAAOE,IAAI,CAACE,OAAL,CAAaC,GAAb,CAAiBC,MAAM,IAAI;AAC9B,0BACI;AAAA,kBAASA,MAAM,CAACC;AAAhB;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJM,CAAP;AAKH,GARD;;AASA,sBACI;AAAM,IAAA,EAAE,EAAC,UAAT;AAAA,4BAEI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAOI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAYI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBACKJ,UAAU,CAACH,KAAD,EAAOC,OAAP,EAAeC,IAAf;AADf;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH;;GAjCQH,O;UACwBF,Q;;;KADxBE,O;AAmCT,eAAeA,OAAf","sourcesContent":["import { gql, useQuery } from '@apollo/client';\r\n\r\nconst getAuthorsQuery = gql`\r\n    {\r\n        authors {\r\n            name \r\n            id\r\n        }\r\n    }\r\n`\r\n\r\n\r\nfunction AddBook() {\r\n    const {error,loading,data} = useQuery(getAuthorsQuery);\r\n    const getAuthors = (error,loading,data) => {\r\n        if (loading) return <option>Loading...</option>\r\n        if (error) return <option>Something wrong happened</option>\r\n        return data.authors.map(author => {\r\n            return (\r\n                <option>{author.name}</option>\r\n            )\r\n        })\r\n    }\r\n    return (\r\n        <form id=\"add-book\">\r\n\r\n            <div className='field'>\r\n                <label>Book name:</label>\r\n                <input type='text' />\r\n            </div>\r\n\r\n            <div className='field'>\r\n                <label>Genre:</label>\r\n                <input type='text' />\r\n            </div>\r\n\r\n            <div className='field'>\r\n                <label>Author</label>\r\n                <select>\r\n                    {getAuthors(error,loading,data)}\r\n                </select>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n  \r\nexport default AddBook;"]},"metadata":{},"sourceType":"module"}