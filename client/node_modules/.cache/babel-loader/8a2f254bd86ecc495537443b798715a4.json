{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Divya\\\\Desktop\\\\graphql\\\\client\\\\src\\\\components\\\\AddBook.js\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from '@apollo/client';\nimport { useState } from 'react';\nimport { getAuthorsQuery } from '../queries/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddBook() {\n  _s();\n\n  const {\n    error,\n    loading,\n    data\n  } = useQuery(getAuthorsQuery);\n  const [name, setName] = useState('');\n  const [genre, setGenre] = useState('');\n  const [authorId, setAuthorId] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(name, genre, authorId);\n  };\n\n  const getAuthors = () => {\n    if (loading) return /*#__PURE__*/_jsxDEV(\"option\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 29\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"option\", {\n      children: \"Something wrong happened\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 27\n    }, this);\n    return data.authors.map(author => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: author.id,\n        children: author.name\n      }, author.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"add-book\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Book name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => {\n          setName(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Genre:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: genre,\n        onChange: e => {\n          setGenre(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: authorId,\n        onChange: e => {\n          setAuthorId(e.target.value);\n        },\n        children: getAuthors()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddBook, \"ByBOQoLNdxV6J7hTZK/KgjvheB0=\", false, function () {\n  return [useQuery];\n});\n\n_c = AddBook;\nexport default AddBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBook\");","map":{"version":3,"sources":["C:/Users/Divya/Desktop/graphql/client/src/components/AddBook.js"],"names":["useQuery","useState","getAuthorsQuery","AddBook","error","loading","data","name","setName","genre","setGenre","authorId","setAuthorId","handleSubmit","e","preventDefault","console","log","getAuthors","authors","map","author","id","target","value"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,eAAT,QAAgC,oBAAhC;;;AAGA,SAASC,OAAT,GAAmB;AAAA;;AACf,QAAM;AAACC,IAAAA,KAAD;AAAOC,IAAAA,OAAP;AAAeC,IAAAA;AAAf,MAAuBN,QAAQ,CAACE,eAAD,CAArC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMY,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ,EAAiBE,KAAjB,EAAuBE,QAAvB;AACH,GAHD;;AAKA,QAAMO,UAAU,GAAG,MAAM;AACrB,QAAIb,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACb,QAAID,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACX,WAAOE,IAAI,CAACa,OAAL,CAAaC,GAAb,CAAiBC,MAAM,IAAI;AAC9B,0BACI;AAAwB,QAAA,KAAK,EAAEA,MAAM,CAACC,EAAtC;AAAA,kBAA2CD,MAAM,CAACd;AAAlD,SAAac,MAAM,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJM,CAAP;AAKH,GARD;;AASA,sBACI;AAAM,IAAA,EAAE,EAAC,UAAT;AAAoB,IAAA,QAAQ,EAAET,YAA9B;AAAA,4BAEI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEN,IAA1B;AAAgC,QAAA,QAAQ,EAAGO,CAAD,IAAK;AAACN,UAAAA,OAAO,CAACM,CAAC,CAACS,MAAF,CAASC,KAAV,CAAP;AAAwB;AAAxE;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAOI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEf,KAA1B;AAAiC,QAAA,QAAQ,EAAGK,CAAD,IAAK;AAACJ,UAAAA,QAAQ,CAACI,CAAC,CAACS,MAAF,CAASC,KAAV,CAAR;AAAyB;AAA1E;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAYI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,KAAK,EAAEb,QAAf;AAAyB,QAAA,QAAQ,EAAGG,CAAD,IAAK;AAACF,UAAAA,WAAW,CAACE,CAAC,CAACS,MAAF,CAASC,KAAV,CAAX;AAA4B,SAArE;AAAA,kBACKN,UAAU;AADf;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ,eAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH;;GA5CQf,O;UACwBH,Q;;;KADxBG,O;AA8CT,eAAeA,OAAf","sourcesContent":["import { useQuery } from '@apollo/client';\r\nimport { useState } from 'react';\r\nimport { getAuthorsQuery } from '../queries/queries';\r\n\r\n\r\nfunction AddBook() {\r\n    const {error,loading,data} = useQuery(getAuthorsQuery);\r\n    const [name, setName] = useState('');\r\n    const [genre, setGenre] = useState('');\r\n    const [authorId, setAuthorId] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(name,genre,authorId)\r\n    }\r\n\r\n    const getAuthors = () => {\r\n        if (loading) return <option>Loading...</option>\r\n        if (error) return <option>Something wrong happened</option>\r\n        return data.authors.map(author => {\r\n            return (\r\n                <option key={author.id} value={author.id}>{author.name}</option>\r\n            )\r\n        })\r\n    }\r\n    return (\r\n        <form id=\"add-book\" onSubmit={handleSubmit}>\r\n\r\n            <div className='field'>\r\n                <label>Book name:</label>\r\n                <input type='text' value={name} onChange={(e)=>{setName(e.target.value)}}/>\r\n            </div>\r\n\r\n            <div className='field'>\r\n                <label>Genre:</label>\r\n                <input type='text' value={genre} onChange={(e)=>{setGenre(e.target.value)}}/>\r\n            </div>\r\n\r\n            <div className='field'>\r\n                <label>Author</label>\r\n                <select value={authorId} onChange={(e)=>{setAuthorId(e.target.value)}}>\r\n                    {getAuthors()}\r\n                </select>\r\n            </div>\r\n\r\n            <button>+</button>\r\n\r\n        </form>\r\n    )\r\n}\r\n  \r\nexport default AddBook;"]},"metadata":{},"sourceType":"module"}