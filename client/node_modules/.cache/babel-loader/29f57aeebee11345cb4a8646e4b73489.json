{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Divya\\\\Desktop\\\\graphql\\\\client\\\\src\\\\components\\\\BookList.js\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from '@apollo/client';\nimport { getBooksQuery } from '../queries/queries';\nimport BookDetails from './BookDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BookList() {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(getBooksQuery);\n\n  const getBooks = () => {\n    if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 29\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Something went wrong\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 27\n    }, this);\n    return data.books.map(book => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\" \", book.name]\n      }, book.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [getBooks(), /*#__PURE__*/_jsxDEV(BookDetails, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BookList, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = BookList;\nexport default BookList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"sources":["C:/Users/Divya/Desktop/graphql/client/src/components/BookList.js"],"names":["useQuery","getBooksQuery","BookDetails","BookList","loading","error","data","getBooks","books","map","book","name","id"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BN,QAAQ,CAACC,aAAD,CAAzC;;AAEA,QAAMM,QAAQ,GAAG,MAAM;AACnB,QAAIH,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACb,QAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACX,WAAOC,IAAI,CAACE,KAAL,CAAWC,GAAX,CAAeC,IAAI,IAAI;AAC1B,0BACI;AAAA,wBAAoBA,IAAI,CAACC,IAAzB;AAAA,SAASD,IAAI,CAACE,EAAd;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJM,CAAP;AAKH,GARD;;AAUA,sBACI;AAAA,eACKL,QAAQ,EADb,eAEI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAnBQJ,Q;UAC4BH,Q;;;KAD5BG,Q;AAqBT,eAAeA,QAAf","sourcesContent":["import { useQuery } from '@apollo/client';\r\nimport { getBooksQuery } from '../queries/queries'\r\nimport BookDetails from './BookDetails';\r\n\r\nfunction BookList() {\r\n    const { loading, error, data } = useQuery(getBooksQuery);\r\n\r\n    const getBooks = () => {\r\n        if (loading) return <p>Loading....</p>\r\n        if (error) return <p>Something went wrong</p>\r\n        return data.books.map(book => {\r\n            return (\r\n                <li key={book.id}> {book.name}</li>\r\n            ) \r\n        })\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            {getBooks()}\r\n            <BookDetails />\r\n        </div>\r\n    )\r\n}\r\n  \r\nexport default BookList;"]},"metadata":{},"sourceType":"module"}