{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Divya\\\\Desktop\\\\graphql\\\\client\\\\src\\\\components\\\\BookList.js\",\n    _s = $RefreshSig$();\n\nimport { gql, useQuery } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BookList() {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(getBooksQuery);\n  console.log(data);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading....\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Something went wrong\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 23\n  }, this);\n  return data.books.map(book => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\" \", book.name]\n    }, book.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this);\n  });\n}\n\n_s(BookList, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = BookList;\nexport default BookList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"sources":["C:/Users/Divya/Desktop/graphql/client/src/components/BookList.js"],"names":["gql","useQuery","BookList","loading","error","data","getBooksQuery","console","log","books","map","book","name","id"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;;;AAGA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BJ,QAAQ,CAACK,aAAD,CAAzC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,MAAIF,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,SAAOC,IAAI,CAACI,KAAL,CAAWC,GAAX,CAAeC,IAAI,IAAI;AAC1B,wBACI;AAAA,sBAAoBA,IAAI,CAACC,IAAzB;AAAA,OAASD,IAAI,CAACE,EAAd;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GAJM,CAAP;AAKH;;GAVQX,Q;UAC4BD,Q;;;KAD5BC,Q;AAYT,eAAeA,QAAf","sourcesContent":["import { gql, useQuery } from '@apollo/client';\r\n\r\n\r\nfunction BookList() {\r\n    const { loading, error, data } = useQuery(getBooksQuery);\r\n    console.log(data);\r\n    if (loading) return <p>Loading....</p>\r\n    if (error) return <p>Something went wrong</p>\r\n    return data.books.map(book => {\r\n        return (\r\n            <li key={book.id}> {book.name}</li>\r\n        )\r\n    })\r\n}\r\n  \r\nexport default BookList;"]},"metadata":{},"sourceType":"module"}